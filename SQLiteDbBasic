import android.content.ContentValues;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.graphics.Bitmap;
import android.provider.BaseColumns;

public class SQLiteDbBasic {

    private Context context;

    public SQLiteDbBasic(Context c){
        context = c;
    }

    public static abstract class DBMS_Constants implements BaseColumns {
        public static final String TABLE_NAME = "MY_COLLECTION";
        public static final String COLUMN_NAME_NAME = "Name";
        public static final String COLUMN_NAME_INFO = "Info";
        public static final String COLUMN_NAME_IMAGE = "Image";
    }

    private static final String TEXT_TYPE = " TEXT";
    private static final String COMMA_SEP = ",";
    private static final String BLOB = "BLOB";
    private static final String SQL_CREATE_TABLE = "CREATE TABLE " + DBMS_Constants.TABLE_NAME + " (" +
            DBMS_Constants._ID + " INTEGER PRIMARY KEY," +
            DBMS_Constants.COLUMN_NAME_NAME + TEXT_TYPE + COMMA_SEP +
            DBMS_Constants.COLUMN_NAME_INFO + TEXT_TYPE + COMMA_SEP +
            DBMS_Constants.COLUMN_NAME_IMAGE + BLOB + " )";

    private static final String SQL_DELETE_ENTRIES = "DROP TABLE IF EXISTS " + DBMS_Constants.TABLE_NAME;

    public class DbHelper extends SQLiteOpenHelper {
        
        // If you change the database schema, you must increment the database version.
        public static final int DATABASE_VERSION = 1;
        public static final String DATABASE_NAME = "FeedReader.db";

        public DbHelper(Context context) {
            super(context, DATABASE_NAME, null, DATABASE_VERSION);
        }
        public void onCreate(SQLiteDatabase db) {
            db.execSQL(SQL_CREATE_TABLE);
        }
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            // This database is only a cache for online data, so its upgrade policy is
            // to simply to discard the data and start over
            db.execSQL(SQL_DELETE_ENTRIES);
            onCreate(db);
        }

        public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            onUpgrade(db, oldVersion, newVersion);
        }

    }

    DbHelper dbHelper = new DbHelper(context);
    SQLiteDatabase collectionDB = dbHelper.getWritableDatabase();

    public boolean insertData(String name, String info, Bitmap bm){

        bitmapUtility utility = new bitmapUtility();
        byte[] image =  utility.getBytes(bm);
        ContentValues cv = new  ContentValues();
        cv.put(DBMS_Constants.COLUMN_NAME_NAME,    name);
        cv.put(DBMS_Constants.COLUMN_NAME_INFO,    info);
        cv.put(DBMS_Constants.COLUMN_NAME_IMAGE, image);
        return collectionDB.insert( DBMS_Constants.TABLE_NAME, null, cv ) > 0;

    }

    public boolean deleteData(String name){
        return collectionDB.delete(DBMS_Constants.TABLE_NAME, DBMS_Constants.COLUMN_NAME_NAME + " = " + name, null) > 0;
    }


}
